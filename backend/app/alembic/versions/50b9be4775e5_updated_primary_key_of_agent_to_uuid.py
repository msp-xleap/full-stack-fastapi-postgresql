"""Updated primary key of agent to uuid

Revision ID: 50b9be4775e5
Revises: e2412789c190
Create Date: 2024-03-16 13:38:52.124303

"""
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision = '50b9be4775e5'
down_revision = 'e2412789c190'
branch_labels = None
depends_on = None

def upgrade():
    # Enable the uuid-ossp extension

    op.execute("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"")

    # Add a new column for UUID type
    op.add_column('aiagent', sa.Column('uuid_id', sqlmodel.sql.sqltypes.GUID(), nullable=True))

    # Populate the new column with UUID values derived from the existing integer "id" column
    op.execute("UPDATE aiagent SET uuid_id = uuid_generate_v4()")

    # Alter the new column to be NOT NULL
    op.alter_column('aiagent', 'uuid_id', nullable=False)

    # Drop the existing primary key constraint
    op.drop_constraint('aiagent_pkey', 'aiagent', type_='primary')

    # Rename the existing "id" column to "old_id"
    op.alter_column('aiagent', 'id', new_column_name='old_id')

    # Rename the new "uuid_id" column to "id"
    op.alter_column('aiagent', 'uuid_id', new_column_name='id')

    # Add a new primary key constraint on the "id" column
    op.create_primary_key('aiagent_pkey', 'aiagent', ['id'])

    # Create an index on the new primary key column
    op.create_index('ix_aiagent_id', 'aiagent', ['id'], unique=True)

    # Drop the old "old_id" column
    op.drop_column('aiagent', 'old_id')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_aiagent_id'), table_name='aiagent')
    op.alter_column('aiagent', 'id',
                    existing_type=sqlmodel.sql.sqltypes.GUID(),
                    type_=sa.INTEGER(),
                    existing_nullable=False)
    # ### end Alembic commands ###
